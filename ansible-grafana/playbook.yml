---
- hosts: grafana
  become: true
  become_user: root

  tasks:

  # TMPFS
  # - name: TMPFS
  # mount:
  #    path: /opt/graphite/storage/whisper
  #    fstype: tmpfs
  #    state: present

  # Grafana repository
  - name: Add Grafana repository
    yum_repository:
      name: grafana
      description: grafana
      baseurl: https://packagecloud.io/grafana/stable/el/6/$basearch
      gpgcheck: 0

  # EPEL repository
  - name: Install EPEL repository
    yum: "name=epel-release state=installed"

  # Other packages
  - name: Install YUM packages
    yum: "name={{ item }} state=installed"
    with_items:
      - python-pip
      - python-devel
      - "@Development tools"
      - httpd
      - mod_wsgi
      - sqlite
      - pycairo
      - libfontenc
      - cairo-devel
      - libffi-devel
      - bind-utils

  # Set timezone
  - name: set timezone to Europe/Moscow
    timezone:
      name: Europe/Moscow

  # Install six
  - name: Install six
    pip: "name={{ item }} state=latest"
    with_items:
      six

  # Install graphite
  - name: Install whisper, carbon, graphite-web from pip
    pip: "name={{ item }} state=latest"
    with_items:
      whisper
      carbon
      graphite-web

  - name: Create dirs
    file: "path={{ item }} state=directory"
    with_items:
      - "/opt/graphite/storage/log/webapp/"
      - "/opt/graphite/static/"

  - name: Copy files
    template: "src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}"
    with_items:
      - { src: 'bashrc', dest: '/home/vagrant/.bashrc', owner: 'vagrant', group: 'vagrant', mode: '0644'}
      - { src: 'graphite.conf', dest: '/etc/httpd/conf.d/graphite.conf', owner: 'root', group: 'root', mode: '0644'}
      - { src: 'carbon.service', dest: '/etc/systemd/system/carbon.service', owner: 'root', group: 'root', mode: '0644'}
      - { src: 'carbon.conf', dest: '/opt/graphite/conf/carbon.conf', owner: 'apache', group: 'apache', mode: '0644'}
      - { src: 'storage-schemas.conf', dest: '/opt/graphite/conf/storage-schemas.conf', owner: 'apache', group: 'apache', mode: '0644'}
      - { src: 'local_settings.py', dest: '/opt/graphite/webapp/graphite/local_settings.py', owner: 'apache', group: 'apache', mode: '0644'}
      - { src: 'graphite.wsgi', dest: '/opt/graphite/conf/graphite.wsgi', owner: 'apache', group: 'apache', mode: '0744'}
      - { src: 'extras.sh', dest: '/home/vagrant/extras.sh', owner: 'apache', group: 'apache', mode: '0700'}

  - name: Disable SELINUX
    selinux:
      policy: targeted
      state: permissive

  # Run extras.sh
  - name: Execute the command in remote shell
    shell: /home/vagrant/extras.sh

  - name: Set /opt/graphite permissions
    file:
      dest: /opt/graphite
      owner: apache
      group: apache
      recurse: true

  - name: Install Grafana
    yum: "name={{ item }} state=installed"
    with_items:
      - grafana

  - name: Grafana config
    copy:
      src: grafana.ini
      dest: /etc/grafana/grafana.ini
      owner: root
      group: root
      mode: 0644

  - name: Start httpd
    service: "name={{ item }} state=started enabled=true"
    with_items:
      - httpd
      - carbon
      - grafana-server

  - name: Pause for 1 minute
    pause:
      minutes: 1

  - name: Create datasource
    uri:
      url: http://localhost:3000/api/datasources
      method: POST
      force_basic_auth: true
      user: admin
      password: admin
      headers:
        Accept: "application/json"
        Content-Type: "application/json"
      body_format: json
      body: {"isDefault":true, "name":"local_graphite", "type":"graphite", "url":"http://localhost", "access":"proxy", "basicAuth":false, "jsonData":{"graphiteVersion":"1.0"}}

...
